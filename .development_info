/*
  migration
  (参考:https://ozway.jp/2020/10/rust-mysql-diesel%EF%BC%881%EF%BC%89/)
  ※注意 マイグレーションファイル名は毎回変更する！
*/

cargo install diesel_cli --no-default-features --features mysql
// ①マイグレーション用のディレクトリを作成 /a_chat_api/migrations直下
diesel migration generate rust_mysql_init
// ②up.sqlにマイグレーション内容記入
// ③マイグレーション実行コマンド
diesel migration run

/* 
  seeder
  DBへのレコード追加
*/
cargo run --bin insert

/*
  cargo runの実行
*/
cargo run --bin main


/*
  debugger
*/
react-devtools -h

/*
  node.js
*/
node server.js

/*
  ngrok
  in-memory-serverディレクトリ内にて実行
*/
ngrok start client wss --config ./ngrok.yml

/*
  ngrok
  a_chat_apiディレクトリ内にて実行
*/
// rustの場合(websocket導入時にnodeと合わせる)
ngrok http 3000

/*
  全体起動方法(node)
*/
①ngrokを起動(in-memory-serverディレクトリ内にて実行)
ngrok start client wss --config ./ngrok.yml

②以下2ファイルのURLを変更
1. websocket.js
// 8000ポートの方を記載
export const sock = new WebSocket("wss://b8f7-217-178-24-119.jp.ngrok.io");

2.src/constants/api.ts
// 開発用(毎回URLが変わるため、手動で変更)(3000ポートの方)
export const API_SERVER_URL = 'https://7676-217-178-24-119.jp.ngrok.io'

③node.jsの場合
1. app.tsxのmock用である以下をコメントアウト
```
// mock service
import 'react-native-url-polyfill/auto';
const { native } = require('./src/mocks/native');
// bypass: デフォルトの設定だと、モックされていないAPIリクエストに対してコンソールに警告が表示される。
// 消したいときは、onUnhandledRequestの設定値をbypassに変更する
native.listen({ onUnhandledRequest: 'bypass' })
```

2. node.jsを起動
node server.js

3. expoを起動
expo start

/*
  全体起動方法(rust)
*/
①ngrokを起動(a_chat_apiディレクトリ内にて実行)
ngrok http 3000

②以下1ファイルのURLを変更
1.src/constants/api.ts
// 開発用(毎回URLが変わるため、手動で変更)(3000ポートの方)
export const API_SERVER_URL = 'https://7676-217-178-24-119.jp.ngrok.io'

③rustを起動(a_chat_apiディレクトリ)
cargo run --bin main

④websocketを起動(/A-chat/websockeディレクトリ)
cargo run

⑤expoを起動
expo start